version: '3.4'


services:
  locationapi:
    image: ${DOCKER_REGISTRY-}locationapi
    depends_on:
        - "app_db"
    build:
      context: .
      dockerfile: Services/Location/LocationAPI/Dockerfile
    ports:
        - "5003:80"
        - "5004:443"
    environment:
        -   ConnectionStrings__DefaultConnection=Server=appdb;Port=5432;Database=Location;Username=postgres;Password=123;
    networks:
        - dev

  categoryapi:
    image: ${DOCKER_REGISTRY-}categoryapi
    depends_on:
        - "app_db"
    build:
      context: .
      dockerfile: Services/Category/CategoryAPI/Dockerfile
    ports:
        - "5001:80" 
        - "5002:443"
    environment:
        -   ConnectionStrings__DefaultConnection=Server=appdb;Port=5432;Database=Category;Username=postgres;Password=123;
    networks:
        - dev

  companyapi:
    image: ${DOCKER_REGISTRY-}companyapi
    depends_on:
        - "app_db"
        - "rabbit_mq"
    build:
      context: .
      dockerfile: Services/Company/CompanyAPI/Dockerfile
    ports:
        - "5005:80"
        - "5006:443"
    environment:
        - ConnectionStrings__DefaultConnection=Server=appdb;Port=5432;Database=Company;Username=postgres;Password=123;
        - RabbitMQ__Hostname=rabbitmq
        - RabbitMQ__Username=guest
        - RabbitMQ__Password=guest
        - Grpc__LocationHttp=https://locationapi:443
        - Grpc__CategoryHttp=https://categoryapi:443
    networks:
        - dev

  userapi:
    image: ${DOCKER_REGISTRY-}userapi
    depends_on:
        - "app_db"
        - "rabbit_mq"
    build:
      context: .
      dockerfile: Services/User/UserAPI/Dockerfile
    ports:
        - "5007:80"
        - "5008:443"
    environment:
        - ConnectionStrings__DefaultConnection=Server=appdb;Port=5432;Database=JobUser;Username=postgres;Password=123;
        - RabbitMQ__Hostname=rabbitmq
        - RabbitMQ__Username=guest
        - RabbitMQ__Password=guest
        - Grpc__LocationHttp=https://locationapi:443
        - Grpc__CategoryHttp=https://categoryapi:443
    networks:
        - dev

  vacancieapi:
    image: ${DOCKER_REGISTRY-}vacancieapi
    depends_on:
        - "app_db"
        - "rabbit_mq"
    build:
      context: .
      dockerfile: Services/Vacancies/VacancieAPI/Dockerfile
    ports:
        - "5009:80"
        - "50010:443"
    environment:
        - ConnectionStrings__DefaultConnection=Server=appdb;Port=5432;Database=Vacancy;Username=postgres;Password=123;
        - RabbitMQ__Hostname=rabbitmq
        - RabbitMQ__Username=guest
        - RabbitMQ__Password=guest
        - Grpc__LocationHttp=https://locationapi:443
        - Grpc__CompanyHttp=https://companyapi:443
        - Grpc__CvHttp=https://userapi:443
    networks:
        - dev

  app_db:
    image: postgres
    container_name: appdb
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=123
        - POSTGRES_DB=Category
    ports:
        - "5432:5432"
    restart: always
    volumes: 
      - app_data:/var/lib/postgresql/data
    networks:
        - dev


  rabbit_mq:
    container_name: rabbit_mq
    image: rabbitmq:3-management
    ports:
        - "15672:15672"
        - "5672:5672"
    hostname: "rabbitmq"
    environment:
        - RABBITMQ_DEFAULT_USER=guest
        - RABBITMQ_DEFAULT_PASS=guest 
    networks:
        - dev

  apigateway:
    container_name: api_gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: Gateway/ApiGateway/Dockerfile
    ports:
        - "8001:80" 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development    
    networks:
        - dev

volumes:
  app_data:


networks:
  dev:
    driver: bridge